name: ZibZo CI/CD

on:
  push:
    branches:
      - "**"

jobs:
  build-and-check:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Step 3: Clean node_modules
      - name: Clean node_modules
        run: rm -rf node_modules

      # Step 4: Install Dependencies
      - name: Install Dependencies
        run: npm install

      # Step 5: Run Tests
      - name: Run Tests
        run: npm test

  deploy-to-render:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-and-check # Ensure tests pass before deploying

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Step 3: Deploy to Render
      - name: Deploy to Render
        env:
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{}' \
            "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys"

      # Step 4: Deployment Status
      - name: Confirm Deployment Status
        env:
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          STATUS=""
          until [ "$STATUS" == "live" ]; do
            STATUS=$(curl -s \
              -H "Authorization: Bearer $RENDER_API_KEY" \
              "https://api.render.com/v1/services/$RENDER_SERVICE_ID" | jq -r '.service.status')
            echo "Current deployment status: $STATUS"
            [ "$STATUS" == "live" ] || sleep 10
          done
          echo "Deployment is live!"
